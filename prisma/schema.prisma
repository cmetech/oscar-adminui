generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Alert {
  ID              Int               @id @default(autoincrement())
  alertGroupID    Int
  status          String            @db.VarChar(50)
  startsAt        DateTime          @db.DateTime(0)
  endsAt          DateTime?         @db.DateTime(0)
  generatorURL    String            @db.Text
  fingerprint     String            @db.Text
  AlertGroup      AlertGroup        @relation(fields: [alertGroupID], references: [ID], onDelete: Cascade, onUpdate: NoAction, map: "Alert_ibfk_1")
  AlertAnnotation AlertAnnotation[]
  AlertLabel      AlertLabel[]

  @@index([alertGroupID], map: "alertGroupID")
}

model AlertAnnotation {
  ID         Int    @id @default(autoincrement())
  AlertID    Int
  Annotation String @db.VarChar(100)
  Value      String @db.VarChar(1000)
  Alert      Alert  @relation(fields: [AlertID], references: [ID], onDelete: Cascade, onUpdate: NoAction, map: "AlertAnnotation_ibfk_1")

  @@index([AlertID], map: "AlertID")
}

model AlertGroup {
  ID               Int                @id @default(autoincrement())
  time             DateTime           @db.Timestamp(0)
  receiver         String             @db.VarChar(100)
  status           String             @db.VarChar(50)
  externalURL      String             @db.Text
  groupKey         String             @db.VarChar(255)
  Alert            Alert[]
  CommonAnnotation CommonAnnotation[]
  CommonLabel      CommonLabel[]
  GroupLabel       GroupLabel[]

  @@index([status, time], map: "idx_status_ts")
  @@index([time], map: "idx_time")
}

model AlertLabel {
  ID      Int    @id @default(autoincrement())
  AlertID Int
  Label   String @db.VarChar(100)
  Value   String @db.VarChar(1000)
  Alert   Alert  @relation(fields: [AlertID], references: [ID], onDelete: Cascade, onUpdate: NoAction, map: "AlertLabel_ibfk_1")

  @@index([AlertID], map: "AlertID")
}

model CommonAnnotation {
  ID           Int        @id @default(autoincrement())
  AlertGroupID Int
  Annotation   String     @db.VarChar(100)
  Value        String     @db.VarChar(1000)
  AlertGroup   AlertGroup @relation(fields: [AlertGroupID], references: [ID], onDelete: Cascade, onUpdate: NoAction, map: "CommonAnnotation_ibfk_1")

  @@index([AlertGroupID], map: "AlertGroupID")
}

model CommonLabel {
  ID           Int        @id @default(autoincrement())
  AlertGroupID Int
  Label        String     @db.VarChar(100)
  Value        String     @db.VarChar(1000)
  AlertGroup   AlertGroup @relation(fields: [AlertGroupID], references: [ID], onDelete: Cascade, onUpdate: NoAction, map: "CommonLabel_ibfk_1")

  @@index([AlertGroupID], map: "AlertGroupID")
}

model GroupLabel {
  ID           Int        @id @default(autoincrement())
  AlertGroupID Int
  GroupLabel   String     @db.VarChar(100)
  Value        String     @db.VarChar(1000)
  AlertGroup   AlertGroup @relation(fields: [AlertGroupID], references: [ID], onDelete: Cascade, onUpdate: NoAction, map: "GroupLabel_ibfk_1")

  @@index([AlertGroupID], map: "AlertGroupID")
}

model Model {
  ID      Model_ID @id
  version String   @db.VarChar(20)
}

model OAUsers {
  username        String    @unique(map: "username") @db.VarChar(20)
  first_name      String    @db.VarChar(20)
  last_name       String    @db.VarChar(20)
  id              String    @id @db.Char(36)
  email           String    @unique(map: "ix_OAUsers_email") @db.VarChar(320)
  hashed_password String    @db.VarChar(1024)
  is_active       Boolean
  is_superuser    Boolean
  is_verified     Boolean
  created_at      DateTime? @default(now()) @db.Timestamp(0)
  modified_at     DateTime? @default(now()) @db.Timestamp(0)
}

model ServerInventory {
  ID          Int    @id @default(autoincrement())
  datacenter  String @db.VarChar(50)
  environment String @db.VarChar(50)
  component   String @db.VarChar(50)
  ipaddress   String @db.VarChar(15)
  hostname    String @db.VarChar(150)
}

enum Model_ID {
  One @map("1")
}
